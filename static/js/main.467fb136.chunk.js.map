{"version":3,"sources":["components/TodoFilter/TodoFilter.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/Form/Form.jsx","helpers/useLocasStorage.js","App.js","index.js"],"names":["TodoFilter","setFilter","filter","filterHandler","filterBy","className","href","onClick","Todo","todo","todos","setTodos","handleRemove","useState","isDoubleClicked","setIsDoubleClicked","title","setTitle","inputQuery","setInputQuery","handleComplete","useCallback","id","newTodos","map","completed","handleSubmit","event","key","handleBlur","target","currentTarget","type","checked","onChange","onDoubleClick","prevState","value","onKeyPress","onBlur","TodoList","filterTodos","setFilterTodos","defaultProps","Form","titleValue","setTitleValue","preventDefault","Date","onSubmit","placeholder","useLocalStorage","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","App","isToggledAll","setIsToggledAll","filteredTodos","setFilteredTodos","putInLocalStorageTodos","useEffect","length","prev","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.467fb136.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const TodoFilter = ({ setFilter, filter }) => {\n  const filterHandler = filterBy => (\n    setFilter(filterBy)\n  );\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={filter === 'all' ? 'selected' : ''}\n          onClick={() => filterHandler('all')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={filter === 'active' ? 'selected' : ''}\n          onClick={() => filterHandler('active')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={filter === 'completed' ? 'selected' : ''}\n          onClick={() => filterHandler('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nTodoFilter.propTypes = {\n  setFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport className from 'classnames';\n\nexport const Todo = ({\n  todo,\n  todos,\n  setTodos,\n  handleRemove,\n}) => {\n  const [isDoubleClicked, setIsDoubleClicked] = useState(false);\n  const [title, setTitle] = useState(todo.title);\n  const [inputQuery, setInputQuery] = useState(title);\n\n  const handleComplete = useCallback(\n    (id) => {\n      const newTodos = todos.map(todo => (\n        {\n          ...todo,\n          ...(todo.id === id ? { completed: !todo.completed } : {}),\n        }\n      ));\n\n      setTodos(newTodos);\n    }, [todos],\n  );\n\n  const handleEditing = () => {\n    setIsDoubleClicked(prevState => !prevState);\n  };\n\n  const handleChange = (event) => {\n    setInputQuery(event.target.value);\n  };\n\n  const handleSubmit = useCallback(\n    (event) => {\n      if (event.key === 'Esc') {\n        setIsDoubleClicked(false);\n        setInputQuery(title);\n\n        return;\n      }\n\n      if (event.key === 'Enter' && inputQuery) {\n        setTitle(inputQuery);\n        setIsDoubleClicked(false);\n      }\n    }, [title, inputQuery],\n  );\n\n  const handleBlur = useCallback(\n    (event) => {\n      const { target, currentTarget } = event;\n\n      if (inputQuery && currentTarget === target) {\n        setTitle(inputQuery);\n        setIsDoubleClicked(false);\n      }\n    }, [inputQuery],\n  );\n\n  return (\n    <li\n      className={className(\n        todo.completed ? 'completed' : '',\n        isDoubleClicked ? 'editing' : '',\n      )}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={() => handleComplete(todo.id)}\n        />\n        <label\n          onDoubleClick={() => handleEditing(todo.id)}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => handleRemove(todo.id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={inputQuery}\n        onChange={handleChange}\n        onKeyPress={handleSubmit}\n        onBlur={handleBlur}\n      />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n  }).isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n  setTodos: PropTypes.func.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Todo } from '../Todo';\n\nexport const TodoList = ({ todos, setTodos, filterTodos, setFilterTodos }) => {\n  const handleRemove = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  return (\n    <ul className=\"todo-list\">\n      {filterTodos.map(todo => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          todos={todos}\n          setTodos={setTodos}\n          filterTodos={filterTodos}\n          handleRemove={handleRemove}\n          setFilterTodos={setFilterTodos}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ),\n  setTodos: PropTypes.func.isRequired,\n  filterTodos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ),\n  setFilterTodos: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n  filterTodos: [],\n};\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Form = ({ setTodos, todos }) => {\n  const [titleValue, setTitleValue] = useState('');\n\n  const handleChange = event => (\n    setTitleValue(event.target.value)\n  );\n\n  const handleSubmit = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      if (!titleValue) {\n        return;\n      }\n\n      setTodos([\n        ...todos,\n        {\n          title: titleValue,\n          completed: false,\n          id: +new Date(),\n        },\n      ]);\n      setTitleValue('');\n    }, [titleValue],\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={titleValue}\n        onChange={handleChange}\n      />\n    </form>\n  );\n};\n\nForm.propTypes = {\n  setTodos: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ),\n};\n\nForm.defaultProps = {\n  todos: [],\n};\n","import { useState } from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      // eslint-disable-next-line no-console\n      console.log(error);\n\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore\n        = value instanceof Function ? value(storedValue) : value;\n      // Save state\n\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      // eslint-disable-next-line no-console\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoList } from './components/TodoList';\nimport { Form } from './components/Form';\nimport { useLocalStorage } from './helpers/useLocasStorage';\n\nexport const App = () => {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n  const [isToggledAll, setIsToggledAll] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useLocalStorage('todos', todos);\n\n  const handleToggle = () => {\n    setIsToggledAll(prev => !prev);\n    const newTodos = todos.map(todo => ({ ...todo, completed: isToggledAll }));\n\n    setTodos(newTodos);\n  };\n\n  const handleClear = () => {\n    setTodos(prevState => prevState.filter(todo => !todo.completed));\n    setIsToggledAll(true);\n  };\n\n  const putInLocalStorageTodos = useCallback(\n    (type) => {\n      switch (type) {\n        case 'active':\n          setFilteredTodos(todos.filter(todo => !todo.completed));\n          break;\n\n        case 'completed':\n          setFilteredTodos(todos.filter(todo => todo.completed));\n          break;\n\n        case 'all':\n        default:\n          setFilteredTodos(todos);\n      }\n    }, [todos],\n  );\n\n  useEffect(() => {\n    putInLocalStorageTodos(filter);\n  }, [todos, filter]);\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <Form\n          setTodos={setTodos}\n          todos={todos}\n        />\n      </header>\n\n      {todos.length > 0 && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              onChange={handleToggle}\n            />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            <TodoList\n              todos={todos}\n              setTodos={setTodos}\n              filterTodos={filteredTodos}\n              setFilterTodos={setFilteredTodos}\n            />\n          </section>\n\n          <footer className=\"footer\">\n            <span className=\"todo-count\">\n              {`${todos.filter(todo => !todo.completed).length} items left`}\n            </span>\n\n            <TodoFilter\n              todos={todos}\n              setFilter={setFilter}\n              filter={filter}\n            />\n\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={handleClear}\n            >\n              Clear completed\n            </button>\n          </footer>\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}